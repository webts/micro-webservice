{"version":3,"sources":["../../lib/core/logger.js"],"names":["Rotate","require","getLogger","name","type","transports","level","stream","process","stdout","stderr","logger","createLogger","streams","headerName","propertyName","logName"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,MAAMA,SAASC,QAAQ,mBAAR,EAA6BD,MAA5C;AAEA;;;;;;;;AAMe,SAASE,SAAT,CAAmBC,IAAnB,EAAyBC,IAAzB,EAA+B;AAC1CA,SAAOA,QAAQ,EAAf;AACAD,SAAOA,QAAQ,EAAf;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,QAAME,aAAa,CACf;AACIC,WAAO,MADX;AAEIC,YAAQC,QAAQC;AAFpB,GADe,EAKf;AACIH,WAAO,OADX;AAEIC,YAAQC,QAAQE;AAFpB,GALe,CAAnB;;AAkBA,MAAIC,SAAS,gBAAOC,YAAP,CAAoB;AAC7BT,UAAMA,IADuB;AAE7BU,aAASR;AAFoB,GAApB,CAAb;;AAKA,MAAID,SAAS,SAAb,EAAwB;AAEpB,oBAAM,+BAA+BD,IAArC;AACA,WAAO,+BAAiB;AAChBW,kBAAY,cADI;AAEdC,oBAAc,OAFA;AAGdC,eAAS,YAAYb,IAAZ,GAAmB,GAHd;AAIdQ,cAAQA;AAJM,KAAjB,CAAP;AAOH;;AAED,SAAOA,MAAP;AACH","file":"logger.js","sourcesContent":["import bunyan from 'bunyan';\r\nimport bunyanMiddleware from 'bunyan-middleware';\r\nimport {log as debug} from 'debug';\r\n\r\nconst Rotate = require('winston-logrotate').Rotate;\r\n\r\n/**\r\n * create logging infrastructure based on the configuration\r\n * @param type\r\n * @param name\r\n * @return {DerivedLogger}\r\n */\r\nexport default function getLogger(name, type) {\r\n    type = type || '';\r\n    name = name || '';\r\n\r\n    /**\r\n     const config = this.options;//require('../config/Defaults')();\r\n     let transports = [\r\n     new Rotate({\r\n            file: './logs/err.log',\r\n            size: '50m',\r\n            timestamp: true,\r\n            colorize: false,\r\n            json: false,\r\n            keep: 20,\r\n            level: 'error',\r\n            name: name + '_err'\r\n        }),\r\n     new Rotate({\r\n            file: './logs/info.log',\r\n            size: '50m',\r\n            timestamp: true,\r\n            colorize: false,\r\n            json: false,\r\n            keep: 20,\r\n            level: 'info',\r\n            name: name + '_info'\r\n        }),\r\n     new winston.transports.Console({colorize: true})\r\n     ];\r\n     */\r\n\r\n    const transports = [\r\n        {\r\n            level: 'info',\r\n            stream: process.stdout\r\n        },\r\n        {\r\n            level: 'error',\r\n            stream: process.stderr\r\n        },\r\n        // {\r\n        //     type: 'rotating-file',\r\n        //     path: './logs/' + name + '.log',\r\n        //     period: '1d',\r\n        //     count: 10\r\n        // }\r\n\r\n    ];\r\n\r\n    let logger = bunyan.createLogger({\r\n        name: name,\r\n        streams: transports\r\n    });\r\n\r\n    if (type === 'express') {\r\n\r\n        debug('create express-logger for ' + name);\r\n        return bunyanMiddleware({\r\n                headerName: 'X-Request-Id'\r\n                , propertyName: 'reqId'\r\n                , logName: 'req_id(' + name + ')'\r\n                , logger: logger\r\n            }\r\n        );\r\n    }\r\n\r\n    return logger;\r\n}"]}