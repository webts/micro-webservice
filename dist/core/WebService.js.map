{"version":3,"sources":["../../lib/core/WebService.js"],"names":["getParams","func","str","toString","len","indexOf","substr","replace","split","WebService","constructor","opts","options","name","container_name","cwd","root","server","router","express","Router","port","db","getDb","DbClient","session","Session","pubsub","PubSubClient","messageBus","authenticator","Authenticator","logger","bind","logging","srcs","Array","isArray","deps","prototype","push","apply","src","register","then","log","level","message","defaults","use","filePattern","base","patterns","plugins","realpath","expandDirectories","length","forEach","file","fn","require","attrs","attributes","uri","method","authen","app","all","wrapFn","req","res","next","params","vals","map","p","param","domain","hostname","fnVal","user","json","err","status","send","call","start","listen","JSON","stringify","service","path","process","on","stop","authenticate","tokenUtil","opKind","data","Promise","reject","Error","obj","util","isObject","msg"],"mappings":"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","sourcesContent":["import util from 'util';\r\nimport express from 'express';\r\nimport cors from 'cors';\r\nimport globby from 'globby';\r\n\r\nimport logger from './logger';\r\nimport Session from './Session';\r\nimport DbClient from './DbClient';\r\nimport PubSubClient from './PubSubClient';\r\nimport Authenticator from \"./Authenticator\";\r\n\r\nfunction getParams(func) {\r\n    let str = func.toString();\r\n    const len = str.indexOf(\"(\");\r\n    return str.substr(len + 1, str.indexOf(\")\") - len - 1).replace(/ /g, \"\").split(',')\r\n}\r\n\r\nexport default class WebService {\r\n    constructor(opts) {\r\n        this.options = opts;\r\n        this.name = opts.name || opts.container_name;\r\n        this.cwd = opts.root;\r\n\r\n        /**\r\n         *\r\n         * @type {*|express}\r\n         */\r\n        this.server = express();\r\n        this.router = express.Router();\r\n\r\n        this.port = opts.port || 3000;\r\n\r\n\r\n        if (typeof opts.db !== 'undefined') {\r\n            this.getDb = () => {\r\n                return new DbClient(this.options.db);\r\n            }\r\n        }\r\n\r\n        if (typeof opts.session !== 'undefined') {\r\n            this.session = new Session(this.options.session);\r\n        }\r\n\r\n        this.pubsub = new PubSubClient(this.options.messageBus);\r\n        this.authenticator = new Authenticator(this);\r\n        this.logger = logger.bind({options:this.options.logging})(this.name);\r\n\r\n        let srcs = [];\r\n        if ('deps' in this.options) {\r\n            if (Array.isArray(this.options.deps)) {\r\n                Array.prototype.push.apply(srcs, this.options.deps);\r\n            }\r\n            else {\r\n                srcs.push(this.options.deps);\r\n            }\r\n        }\r\n        if ('src' in this.options) {\r\n            if (Array.isArray(this.options.src)) {\r\n                Array.prototype.push.apply(srcs, this.options.src);\r\n            }\r\n            else {\r\n                srcs.push(this.options.src);\r\n            }\r\n        }\r\n\r\n        this.register(srcs).then(() => this.log({level:'info', message:'Plugins registered'}));\r\n\r\n        this.defaults();\r\n\r\n        this.server.use(this.router);\r\n    }\r\n\r\n    async register(filePattern) {\r\n        const base = this;\r\n\r\n        let patterns = [filePattern];\r\n        if(Array.isArray(filePattern)) patterns = filePattern;\r\n\r\n        try {\r\n            const plugins = await globby(patterns, {realpath: true, cwd: this.cwd, expandDirectories:true});\r\n            if (plugins && plugins.length > 0)\r\n            {\r\n                plugins.forEach((file) =>\r\n                {\r\n                    let fn = require(file);\r\n                    if (typeof fn === 'function')\r\n                    {\r\n                        if ('attributes' in fn)\r\n                        {\r\n                            const attrs = fn.attributes;\r\n                            if ('uri' in attrs) {\r\n                                const uri = this.name + '/' + attrs.uri;\r\n                                if ('nowrap' in attrs) {\r\n                                    if ('method' in attrs) {\r\n                                        const method = attrs.method;\r\n                                        this.router[method](uri, this.authen(), fn.bind({app: base}));\r\n                                    }\r\n                                    else\r\n                                        this.router.all(uri, this.authen(), fn.bind({app: base}));\r\n                                }\r\n                                else\r\n                                {\r\n                                    let wrapFn = async (req, res, next) =>\r\n                                    {\r\n                                        const params = getParams(fn);\r\n                                        let vals = params.map((p) => {return req.param(p)});\r\n                                        const domain = req.hostname.split('.').length > 1 ? req.hostname.split('.')[0]: '';\r\n                                        try {\r\n                                            const fnVal = await fn.apply({app: base, user: req.user, domain:domain, next:next}, vals);\r\n\r\n                                            //TODO: currently support only json render\r\n                                            res.json(fnVal);\r\n                                        }\r\n                                        catch(err){\r\n                                            this.log({\r\n                                                level:'error',\r\n                                                message: err.message\r\n                                            });\r\n                                            res.status(404).send(err.message);\r\n                                        }\r\n                                    };\r\n\r\n                                    if ('method' in attrs) {\r\n                                        const method = attrs.method;\r\n                                        this.router[method](uri, this.authen(), wrapFn);\r\n                                    }\r\n                                    else\r\n                                        this.router.all(uri, this.authen(), wrapFn);\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            fn.call(null, this);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        catch (err) {\r\n            this.log({\r\n                level: 'error',\r\n                message: err.message\r\n            })\r\n        }\r\n    }\r\n\r\n    start()\r\n    {\r\n        this.log({\r\n            level:'info',\r\n            message: `service ${this.name} listening at port ${this.port}`\r\n        });\r\n        this.server.listen(this.port);\r\n        //notify the proxy registry\r\n        this.pubsub.send('#service', JSON.stringify({\r\n            service: this.name,\r\n            port: this.port,\r\n            path: this.name\r\n        }) );\r\n\r\n        //set hook on process kill signal\r\n        this.status = 'running';\r\n        process.on('SIGINT', this.stop);\r\n        process.on('SIGTERM', this.stop);\r\n    }\r\n\r\n    stop()\r\n    {\r\n        if(this.status === 'running') {\r\n            //clean up\r\n            this.log({\r\n                level: 'info',\r\n                message: `service ${this.name} listening at port ${this.port}`\r\n            });\r\n\r\n            this.pubsub.send('#service', JSON.stringify({\r\n                service: this.name,\r\n                port: this.port,\r\n                path: this.name\r\n            }));\r\n        }\r\n    }\r\n\r\n    defaults() {\r\n        this.server.use(express.json());\r\n        this.server.use(cors());\r\n        this.server.use(logger.bind({options:this.options.logging})(this.name,'express'));\r\n    }\r\n\r\n    /**\r\n     * this will be overwrite by Authenticator\r\n     */\r\n    authen() {\r\n        return this.authenticator.authenticate;\r\n    }\r\n\r\n    tokenUtil(opKind, data)\r\n    {\r\n        Promise.reject(new Error('tokenUtil is not implemented'));\r\n    }\r\n\r\n    log(obj){\r\n        let level = 'info';\r\n        if(util.isObject(obj) && 'level' in obj)\r\n            level = obj.level;\r\n\r\n        let msg = '';\r\n\r\n        if(util.isObject(obj) && 'message' in obj)\r\n            msg = obj.message;\r\n        else\r\n            msg = obj;\r\n\r\n        if(level in this.logger)\r\n        {\r\n            this.logger[level](msg);\r\n        }\r\n    }\r\n\r\n}"],"file":"WebService.js"}